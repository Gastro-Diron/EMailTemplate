# openapi: '3.0.0'
# info:
#   version: 1.0.0
#   title: Email Verification
#   description: An API to send a verification code to the user via email

# paths:
#   /users:
#     post:
#       summary: Create a user
#       description: Create a new user in the temporary user store
#       parameters:
#         - name: UserEntry
#           in: body
#           description: creates a new user in the temporary database
#           required: true
#           schema:
#             type: object
#             required:
#               - email
#             properties:
#               email:
#                 type: string
#               name:
#                 type: string
#               country:
#                 type: string
                
#       responses:
#         '200':
#           description: Successfully created a new artist
#           schems:
#             type: string
          
#         '400':
#           description: Invalid request 
#           schema:
#             type: object
#             properties:   
#               errmsg:
#                 type: string
#       deprecated: false
#       security: []
#   # #  ----- Added lines  ----------------------------------------
#   # /users/{username}:
#   #   get:
#   #     description: To get a new verifcation code to the email
#   #     parameters:
#   #       - name: username
#   #         in: path 
#   #         type: string
#   #         required: true 
          
#   #     responses:
#   #       200:
#   #         description: New verification code has been sent to the email
#   #         schema:
#   #           type: string
                
#   #       400:
#   #         description: Invalid request
#   #         schema:
#   #           type: object 
#   #           properties:           
#   #             errmsg:
#   #               type: string
    
#   #   post:
#   #     description: Updates the password of the user and create account in Asgardeo
#   #     parameters:
#   #       - name: username
#   #         in: path 
#   #         type: string
#   #         required: true 
#   #       - name: password
#   #         in: path
#   #         type: string
#   #         required: true
                
#   #     responses:
#   #       200:
#   #         description: User's password is updated and user has been successfully created in the Asgardeo user store
#   #         schema:
#   #           type: string
          
#   #       400:
#   #         description: Invalid request 
#   #         schema:
#   #           type: object
#   #           properties:   
#   #             errmsg:
#   #               type: string

#   #   delete:
#   #     description: To delete the user from the Temporary User store
#   #     parameters:
#   #       - name: username
#   #         in: path 
#   #         type: string
#   #         required: true 

#   #     responses::
#   #       200:
#   #         description: User has been successfully deleted from the temporary user store
#   #         schema:
#   #           type: string
          
#   #       400:
#   #         description: Invalid request
#   #         schema:
#   #           type: object
#   #           properties:   
#   #             errmsg:
#   #               type: string
#   # #  ---- /Added lines  ----------------------------------------

#   # /verify:
#   #   post:
#   #     description: To check the verification code of the user
#   #     parameters:
#   #       - name: VerifyEntry
#   #         in: body
#   #         description: posts the verification code of the user to the database and check
#   #         schema:
#   #           type: object
#   #           required:
#   #             - email
#   #           properties:
#   #             email:
#   #               type: string
#   #             code:
#   #               type: string
                
#   #     responses:
#   #       200:
#   #         description: Successfully posted the verification code
#   #         schema:
#   #           type: object
#   #           properties:   
#   #             status:
#   #               type: string
          
#   #       400:
#   #         description: Invalid request 
#   #         schema:
#   #           type: object
#   #           properties:   
#   #             errmsg:
#   #               type: string

openapi: "3.0.0"
info:
  title: Greeting Service
  version: 1.0.0
paths:
  /users:
    get:
      summary: Greet a person
      description: Greet a person by name
      tags:
        - greeting
      parameters:
        - name: name
          in: query
          description: Name of the person to greet
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            text/plain:
              schema:
                type: string
      deprecated: false
      security: []